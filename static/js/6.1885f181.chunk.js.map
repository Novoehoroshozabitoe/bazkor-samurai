{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormsControls.js","Utils/validators/validators.js","components/Login/Login.js"],"names":["module","exports","FormControl","input","meta","touched","error","children","hasError","className","style","formControl","Textarea","props","restProps","child","Input","createField","placeholder","name","validators","component","text","validate","required","value","maxLengthCreator","maxLength","length","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","type","formSummaryError","connect","state","isAuth","auth","login","to","formData","email","password","rememberMe"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,0C,8LCGrHC,EAAc,SAAC,GAA4C,EAA3CC,MAA4C,IAAD,IAApCC,KAAOC,EAA6B,EAA7BA,QAAQC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SACzCC,EAAWH,GAAWC,EAC5B,OACI,yBAAKG,UAAWC,IAAMC,YAAc,KAAOH,EAAWE,IAAMJ,MAAQ,KAChE,6BACKC,GAEJC,GAAY,8BAAOF,KAKnBM,EAAW,SAACC,GAAW,IACzBV,EAAoCU,EAApCV,MAAuBW,GAAaD,EAA7BT,KAA6BS,EAAvBE,MADW,YACYF,EADZ,2BAE/B,OAAO,kBAACX,EAAgBW,EAAjB,IAAyB,8CAAcV,EAAWW,MAIhDE,EAAQ,SAACH,GAAW,IACtBV,EAAoCU,EAApCV,MAAuBW,GAAaD,EAA7BT,KAA6BS,EAAvBE,MADQ,YACeF,EADf,2BAE5B,OAAO,kBAACX,EAAgBW,EAAjB,IAAyB,2CAAWV,EAAWW,MAG7CG,EAAc,SAACC,EAAYC,EAAMC,EAAYC,GAA/B,IAA0CR,EAA1C,uDAAkD,GAAIS,EAAtD,uDAA6D,GAA7D,OACvB,6BACI,kBAAC,IAAD,eAAOJ,YAAaA,EAAaC,KAAMA,EAChCI,SAAUH,EACVC,UAAWA,GACPR,IAJf,IAKQS,K,iCCjCZ,oEAAO,IAAME,EAAW,SAAAC,GACrB,IAAIA,EAEH,MAAO,qBAEEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC7C,GAAIA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,gB,iCCNjC,+FA2BME,EAAiBC,YAAU,CAACC,KAAM,SAAjBD,EAlBL,SAAC,GAA0B,IAAzBE,EAAwB,EAAxBA,aAAa1B,EAAW,EAAXA,MAC7B,OACI,0BAAM2B,SAAUD,GACPf,YAAY,QAAQ,QAAQ,CAACO,KAAUR,KACvCC,YAAY,WAAW,WAAW,CAACO,KAAUR,IAAM,CAACkB,KAAK,aACzDjB,YAAY,KAAK,aAAa,GAAGD,IAAM,CAACkB,KAAK,YAAY,eAE7D5B,GAAS,yBAAKG,UAAWC,IAAMyB,kBAC3B7B,GAGL,6BACI,8CA0BD8B,uBAHS,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,UAEgB,CAACE,WAAzBJ,EAlBD,SAACvB,GAKX,OAAIA,EAAMyB,OACC,kBAAC,IAAD,CAAUG,GAAI,aAGlB,6BACH,qCACA,kBAACZ,EAAD,CAAgBI,SAVH,SAACS,GACf7B,EAAM2B,MAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/6.1885f181.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__175ot\",\"error\":\"FormsControls_error__1j8Gz\",\"formSummaryError\":\"FormsControls_formSummaryError__NsX0w\"};","import React from \"react\";\r\nimport style from './FormsControls.module.css';\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched,error},children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={style.formControl + \" \" + (hasError ? style.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}> <textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}> <input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder,name, validators, component, props = {}, text = '') => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n)\r\n","export const required = value => {\r\n   if (value) return undefined;\r\n\r\n    return 'Field is required';\r\n}\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n   if (value.length > maxLength) return `Max length is ${maxLength} symbols `;\r\n    return undefined;\r\n}\r\n","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {Input,createField} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../Utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../common/FormsControls/FormsControls.module.css\"\r\n\r\nconst LoginForm = ({handleSubmit,error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n                {createField('Email','email',[required],Input)}\r\n                {createField('Password','password',[required],Input,{type:'password'})}\r\n                {createField(null,'rememberMe',[],Input,{type:'checkbox'},'remember me')}\r\n\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>\r\n                }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n       props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit ={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps,{login}) (Login);"],"sourceRoot":""}